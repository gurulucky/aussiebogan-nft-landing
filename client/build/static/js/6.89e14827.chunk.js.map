{"version":3,"sources":["actions/manager.js","lib/abi.js","lib/ABC2-M_summary.js","lib/mint.js","pages/Test.js"],"names":["setAlert","open","text","dispatch","type","SET_ALERT","payload","alertOpen","alertText","NFT_ABI","TOKEN_URIS","NFT_ADDRESS","mint","account","amount","a","abc_contract","window","web3","eth","Contract","Number","methods","totalSupply","call","tokenCounter","mintUris","slice","console","log","send","from","value","utils","toWei","toString","res","status","getTotalMinted","hasEnoughEth","getBalance","balance","isBigger","String","message","x","y","length","repeat","i","NETWORK","RootStyle","styled","theme","padding","spacing","breakpoints","up","ButtonStyle","Button","borderRadius","minWidth","backgroundColor","ConnectButton","LoadingButton","width","Typography","fontFamily","fontSize","Test","useTheme","isDesktop","palette","mode","useMediaQuery","useDispatch","useState","quantity","setQuantity","setAccount","initWeb3","setInitWeb3","minting","setMinting","totalMinted","setTotalMinted","useEffect","ethereum","Web3","on","accounts","conMetamask","networkId","setTotal","e","request","method","chainId","enable","undefined","total","direction","sx","p","border","backgroundImage","alignItems","className","variant","color","textAlign","justifyContent","onClick","fullWidth","inputProps","min","max","onChange","target","loading","loadingPosition","size","href"],"mappings":"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","file":"static/js/6.89e14827.chunk.js","sourcesContent":["import {\n  SET_ALERT,\n} from './types';\n\n\nexport const setAlert = (open, text) => dispatch => {\n  dispatch({\n    type: SET_ALERT,\n    payload: { alertOpen: open, alertText: text }\n  })\n}\n","export const NFT_ABI = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ApprovalForAll\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getApproved\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isApprovedForAll\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string[]\",\r\n\t\t\t\t\"name\": \"tokenUris\",\r\n\t\t\t\t\"type\": \"string[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"mint\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"_data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setApprovalForAll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"baseURI_\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setBaseURI\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setPrice\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes4\",\r\n\t\t\t\t\"name\": \"interfaceId\",\r\n\t\t\t\t\"type\": \"bytes4\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"supportsInterface\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"tokenCounter\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"totalSupply\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"withdraw\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]","export const TOKEN_URIS = [\r\n    \"https://ipfs.infura.io/ipfs/QmecXjvZCTuEa8VWDA7n5VuDsuZrDcjoVbo5cJux8YrdXc/metadata1.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmW3e7qwKesD5qF58uUXXyU2HgjvSFLa86hQ2EjtpzPk36/metadata2.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmUprBjv6N3pesa6qud5mBUDWKYDxmNPJojRpNPviXEJem/metadata3.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmXC5U5JMcY9CaxULz5pGr8SownjKXN1Xu4feCD1g4y8j7/metadata4.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmRxYzbvVTFab3LGsMFymHx4gYxsadQ7hNq8TEK32LbpGq/metadata5.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmbYy5pnTYDa4uUHZM6mJ9mDEkrk9PvhZpCmS9q42tnKyG/metadata6.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZ9Qe1fwwVxZWem8qzFA3oDkNgVxjuz3nm5SkVuLim6Hy/metadata7.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNcouX2jnWGNm3dbrJnos4zPDgFuba2r7rnSxqBu8Ygy4/metadata8.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmURBmTJoyU793YiWTF96QRHx6Q2NuDrF4bJ1GubCzqESH/metadata9.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmPAD1R226osXoSiy5zb99W3aiUFMKQ5EmmxRZz7xEHkk3/metadata10.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmVsiJ6Fug19CXCspKbUmxvFmWZmaCLNirwanLwBCHtMhR/metadata11.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmPgag1z4g3Rrh99MGWCcJUgCZbTXNBYq9C57sJV2y81SE/metadata12.json\",\r\n    \"https://ipfs.infura.io/ipfs/Qmd4nsKtqCdz5C5tt6xWyNZJcQ59N6iVSTMZkaxLzwfGA2/metadata13.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmTMZR9iEmTv9ueh1WdrcrjbQzLagEPEeJ9ztJAhpaeAvD/metadata14.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmTqH5uTVpTcQZXWRstMDLzm89nUsJ2KRewYyZKqEAgJvi/metadata15.json\",\r\n    \"https://ipfs.infura.io/ipfs/Qmc1Gh2uBSJVGC5yYKLbBKQ8zMuSEwD6V7wG9DVWWX6TmT/metadata16.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNrWjQzFhdDKN7jvnPtRihMrUDTxXDRwBuAyHMeMcxKLR/metadata17.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmeWfrNCvUeidfSpo7Necw7BmU2ymtpXKpUidcrrH3PGfE/metadata18.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmP1ZQT3vcQuP6CQHRbMxv59KeSMx4UAKst2TPDkF9SuJs/metadata19.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZYJF1v4hc8uzfPr72ba7Vc2JnutBFdzM4zhedBD7KHxP/metadata20.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNwd9XMzc9wegWVFa4dkgTE8mVRvW7gzhw4a1oc6SBQAg/metadata21.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmV5vWSCkwjrXoKuU5jBHG1SsbCwfhcBWgs2xVVbuHv39f/metadata22.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmPgmCVpu4Hci1AE6jLoyM3jGEBaTuCD72DtLyzFcoRDmu/metadata23.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmPBvNno1LSB5tYtHz34QdRVnZNe96KHQLcQRY2mHoSYXS/metadata24.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmSUr9KfD5ydQxCr5iXsRGXZK4tSrnsvPxMFXfe9HuwY4P/metadata25.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmUi91tfsvUGLrs8bMh5Uaep3d4AZqVz9hWeNrEyH6HbCf/metadata26.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmT3nXfbqAB9zZGUH4pWsinFm931NpkBD59xjMvzGFFvpv/metadata27.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmUC7cLgD84u4yPxiNeBGoFvM9aZgHFyvm9kSh5bFMLE2d/metadata28.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmTBtFuq1FsBbYgrwX3jqNKyM87eWzjwzhz285CVmY62mx/metadata29.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmdGUxcUsxpuVFR3maCqzkUPiJ6zgbfy5DH1anw5APN9Hg/metadata30.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNWFFXTk44acpD9uPX7WZhugQgfmcqz8DzK7NG9xjiP2k/metadata31.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmUPxXFSktyRvoXaYtMc7AmcC55M6BReE1uqzMjN9Y1ycq/metadata32.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmamTnP1Fo4oXBGTQRfeQyWZEMZdvnbLa1YwuU6wCoFSrn/metadata33.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmSYLQme2LakjMZAkqkp38A1cFC9txPWwKiFG6Qps1F6XU/metadata34.json\",\r\n    \"https://ipfs.infura.io/ipfs/Qmdb39zywezhCRcWnATQnJyrRUuRFASs6Sc2M3xTsyQWM4/metadata35.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmU6LGV6r5JikX6R7SC2YUCV4NhmL63RhJWdbtuGbXdxBU/metadata36.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmVQQvGRYXsU39abfhkA3mp58mXkMVLAffCCmmBqmS6o9y/metadata37.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmcHQzpptLS2SAYwpp4dzBfzBt82Ytag8AKcfVNUBvZ9CA/metadata38.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZKmkfeUMAJzzfR9NsygLhwsS4DXWQ28hFHRzLnWjEAzb/metadata39.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmaMBkxLPmweVvpGnT7aj9HZMDofy8mCx7rW41jiTu1eQt/metadata40.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmXLi5JAQaootZ26eXqVLnYaVEGY8ihQVu8rbp1rLW2wko/metadata41.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZqwFHyVa8Jc383KgVXxsZvccDe9bRFAazSs84itETR1y/metadata42.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmafgUHGvB1QzsyySsoGKHwnUGtmPvtkym9xzDtPUBkMJZ/metadata43.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmZzGyUvvL4MFX8qpbg9vmWeRai79JJf5J6V7cnt3sxqwE/metadata44.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmXbRZ89B21bsem24MPXhgYNSNKuDpYyeP4D2RDkRn7SWh/metadata45.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmaGESXcRF1t7JeKuK8wcaTXrwbjZBED4DZgLYmnwemFH8/metadata46.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmbyMf1ZUACCQVDWivmnzo55Fcm9XNbmci2t3SqdeJyppU/metadata47.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmNrMKQWrCXANQBp2JWbaBLiDiaTBfLQg8mb6qfrbJqJHA/metadata48.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmSufZFKjCw3rp7xHt9aUDnpYRChL1CF4ud7Kfnw9WEnoW/metadata49.json\",\r\n    \"https://ipfs.infura.io/ipfs/QmbVjgeZaLchuo8iSqftRLwWFQrWogUh85NYS8MRY5A8J2/metadata50.json\"\r\n]","import { NFT_ABI } from './abi.js'\r\nimport { TOKEN_URIS } from './ABC2-M_summary.js'\r\n\r\nconst NFT_ADDRESS = '0xfFA4683b9aC4aAD95416804f4cac0e23f527F63c'\r\nconst PRICE = 0.05\r\n\r\nexport const mint = async (account, amount) => {\r\n    let abc_contract = new window.web3.eth.Contract(NFT_ABI, NFT_ADDRESS);\r\n    let tokenCounter = Number(await abc_contract.methods.totalSupply().call());\r\n    let mintUris = TOKEN_URIS.slice(tokenCounter, tokenCounter + amount);\r\n    console.log('mint tokenUris', mintUris);\r\n    let res = await abc_contract.methods.mint(mintUris).send({ from: account, value: window.web3.utils.toWei((PRICE * amount).toString(), \"ether\") })\r\n    return res.status\r\n}\r\n\r\nexport const getTotalMinted = async () => {\r\n    let abc_contract = new window.web3.eth.Contract(NFT_ABI, NFT_ADDRESS);\r\n    let tokenCounter = Number(await abc_contract.methods.totalSupply().call());\r\n    return tokenCounter;\r\n}\r\n\r\nexport const hasEnoughEth = async (account, amount) => {\r\n    try {\r\n        let balance = await window.web3.eth.getBalance(account);\r\n        // console.log(balance, window.web3.utils.toWei((PRICE * amount).toString, \"ether\"));\r\n        if (isBigger(String(balance), String(window.web3.utils.toWei((PRICE * amount).toString(), \"ether\"))) >= 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch (err) {\r\n        console.log(err.message);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const isBigger = (x, y) => {\r\n    x = x || \"0\";\r\n    y = y || \"0\";\r\n    if (x.length > y.length) y = \"0\".repeat(x.length - y.length) + y;\r\n    else if (y.length > x.length) x = \"0\".repeat(y.length - x.length) + x;\r\n\r\n    for (let i = 0; i < x.length; i++) {\r\n        if (x[i] < y[i]) return -1;\r\n        if (x[i] > y[i]) return 1;\r\n    }\r\n    return 0;\r\n}","import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Web3 from 'web3'\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Grid, Card, Container, Typography, useMediaQuery, Stack, TextField, Button, InputBase } from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n//\r\nimport { setAlert } from 'src/actions/manager';\r\nimport { hasEnoughEth, mint, getTotalMinted } from '../lib/mint';\r\n// ----------------------------------------------------------------------\r\nconst NETWORK = 'rinkeby';\r\nconst RINKEBY_CHAINID = 4;\r\nconst MAINNET_CHAINID = 1;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  // paddingTop: theme.spacing(15),\r\n  padding: theme.spacing(3),\r\n  [theme.breakpoints.up('md')]: {\r\n    padding: theme.spacing(15)\r\n  }\r\n}));\r\n\r\nconst ButtonStyle = styled(Button)(({ theme }) => (\r\n  {\r\n    borderRadius: 0,\r\n    minWidth: '10px',\r\n    backgroundColor: '#0f2938'\r\n  }\r\n));\r\n\r\nconst ConnectButton = styled(LoadingButton)(({ theme }) => ({\r\n  borderRadius: 0,\r\n  width: '200px'\r\n}));\r\n\r\nconst TimerStyle = styled(Typography)(({ theme }) => ({\r\n  fontFamily: 'VT323, monospace',\r\n  fontSize: '48px',\r\n  [theme.breakpoints.up('md')]: {\r\n    fontSize: '64px'\r\n  }\r\n}))\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Test() {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'));\r\n  const dispatch = useDispatch();\r\n\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [account, setAccount] = useState('');\r\n  const [initWeb3, setInitWeb3] = useState(false);\r\n  const [minting, setMinting] = useState(false);\r\n  const [totalMinted, setTotalMinted] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (window.ethereum && !initWeb3) {\r\n      setInitWeb3(true);\r\n      window.web3 = new Web3(window.ethereum);\r\n      window.ethereum.on('accountsChanged', function (accounts) {\r\n        // if (accounts[0] !== account) {\r\n        console.log(\"change\", accounts[0]);\r\n        conMetamask();\r\n        // }\r\n      });\r\n      window.ethereum.on('networkChanged', function (networkId) {\r\n        if (Number(networkId) !== (NETWORK === 'rinkeby' ? RINKEBY_CHAINID : MAINNET_CHAINID)) {\r\n          setAccount(\"\");\r\n          return;\r\n        }\r\n        conMetamask();\r\n      });\r\n      setTotal()\r\n      // conMetamask();\r\n    }\r\n    // getRyoshiBalance(account, zksyncWallet);\r\n  }, []);\r\n  /// window.ethereum used to get addrss\r\n  const conMetamask = async (e) => {\r\n    // console.log(e);\r\n    if (e && account) {\r\n      setAccount(\"\");\r\n      return;\r\n    }\r\n    console.log('changed');\r\n    if (window.ethereum) {\r\n      try {\r\n        // const addressArray = await window.ethereum.request({\r\n        //   method: \"eth_requestAccounts\",\r\n        // });\r\n        // window.web3 = new Web3(window.ethereum);\r\n        //   console.log(\"account\",addressArray[0]);\r\n        const chainId = await window.ethereum.request({\r\n          method: \"eth_chainId\"\r\n        });\r\n        if (Number(chainId) !== (NETWORK === 'rinkeby' ? RINKEBY_CHAINID : MAINNET_CHAINID)) {\r\n          dispatch(setAlert(true, `Connect to ${NETWORK} network on metamask.`));\r\n          setAccount(\"\");\r\n          return;\r\n        }\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(accounts);\r\n        // console.log(await window.web3.eth.getBalance(accounts[0]));\r\n        setAccount(accounts[0] !== undefined ? accounts[0] : \"\");\r\n        if (accounts[0]) {\r\n          setMinting(true);\r\n          if (await hasEnoughEth(accounts[0], quantity)) {\r\n            if (await mint(accounts[0], quantity)) {\r\n              dispatch(setAlert(true, `Minting ${quantity} NFTs succeed`));\r\n              setTotal();\r\n            }\r\n          } else {\r\n            dispatch(setAlert(true, `Insufficient funds. Check your wallet balance. You need 0.05 ETH + GAS fee at ${accounts[0]}`));\r\n          }\r\n          setMinting(false);\r\n        }\r\n      } catch (err) {\r\n        setMinting(false);\r\n      }\r\n    } else {\r\n      dispatch(setAlert(true, \"Install web3 wallet\"));\r\n    }\r\n  }\r\n\r\n  const setTotal = async () => {\r\n    let total = await getTotalMinted();\r\n    setTotalMinted(total);\r\n  }\r\n\r\n  const changeQuantity = (e) => {\r\n    if (e.target.value > 10) {\r\n      return;\r\n    }\r\n    setQuantity(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <RootStyle>\r\n        <Stack direction='column'\r\n          sx={{\r\n            p: 3,\r\n            border: '1px solid #1CCAFF',\r\n            backgroundImage: 'repeating-linear-gradient(45deg,#0b1414,#0b1414 10px,#061724 10px,#061724 20px)'\r\n          }}\r\n          spacing={5} alignItems='center'\r\n        >\r\n          <Stack direction='column'>\r\n            <Typography className='flux_title' variant=\"h2\" color='primary.main' sx={{ textAlign: 'center' }}>\r\n              Mint ABC NFTs\r\n            </Typography>\r\n            <Stack direction='row' spacing={1} justifyContent='center'>\r\n              <Typography variant=\"h6\" color='common.white'>\r\n                Total minted:\r\n              </Typography>\r\n              <Typography variant='h6' color='primary.main'>{`${totalMinted} / 10000`}</Typography>\r\n            </Stack>\r\n          </Stack>\r\n\r\n          <Stack direction='column'>\r\n            <Typography variant='h6' color='common.white' textAlign='center'>0.05 Eth + Gas fee</Typography>\r\n            <Typography variant='h6' color='common.white' textAlign='center'>Max 10 ABCs per transactions</Typography>\r\n          </Stack>\r\n          <Stack direction={isDesktop ? 'row' : 'column'} justifyContent='center' spacing={1}>\r\n            <Stack direction='row' sx={{ border: '1px solid #0E77B7', p: '5px', backgroundColor: '#0f2938' }}>\r\n              <ButtonStyle variant='outlined' onClick={() => setQuantity(quantity - 1 > 0 ? quantity - 1 : 1)}>-</ButtonStyle>\r\n              <InputBase variant='outlined' type='number'\r\n                fullWidth={true}\r\n                inputProps={{\r\n                  min: 1, max: 10,\r\n                  sx: { textAlign: 'center' },\r\n                }}\r\n                value={quantity}\r\n                onChange={changeQuantity}\r\n              />\r\n              <ButtonStyle variant='outlined' onClick={() => setQuantity(quantity + 1 <= 10 ? quantity + 1 : 10)}>+</ButtonStyle>\r\n            </Stack>\r\n            <Stack direction='row' spacing={1}>\r\n\r\n              <ButtonStyle variant='outlined' onClick={() => setQuantity(3)}>3</ButtonStyle>\r\n              <ButtonStyle variant='outlined' onClick={() => setQuantity(5)}>5</ButtonStyle>\r\n              <ButtonStyle variant='outlined' onClick={() => setQuantity(10)}>10</ButtonStyle>\r\n            </Stack>\r\n          </Stack>\r\n          <ConnectButton loading={minting} loadingPosition='start' variant='contained' size='large' onClick={conMetamask}>{`MINT ABC`}</ConnectButton>\r\n          <a href='https://rinkeby.etherscan.io/address/0xfFA4683b9aC4aAD95416804f4cac0e23f527F63c' target='_blank'><Typography variant='body1'>View Contract</Typography> </a>\r\n        </Stack>\r\n    </RootStyle >\r\n  );\r\n}\r\n"],"sourceRoot":""}